#!/bin/bash

# Production Deployment Script for Callchecker
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy_production.sh

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω –æ—Ç root
if [ "$EUID" -eq 0 ]; then
    log_error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ root!"
    log_info "–°–æ–∑–¥–∞–π—Ç–µ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: sudo ./setup_server.sh"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Docker
if ! command -v docker &> /dev/null; then
    log_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ Docker –∑–∞–ø—É—â–µ–Ω
if ! docker info &> /dev/null; then
    log_error "Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!"
    log_info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: sudo systemctl start docker"
    log_info "–ò–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker: sudo usermod -aG docker \$USER"
    exit 1
fi

log_info "üöÄ –ù–∞—á–∏–Ω–∞—é —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Callchecker –≤ production..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ ! -f "env.production" ]; then
    log_error "–§–∞–π–ª env.production –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    log_info "–°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ env.example"
    exit 1
fi

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
log_info "üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
cp env.production .env
log_success "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log_info "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose down --remove-orphans || true

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "–û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ Docker –æ–±—Ä–∞–∑—ã? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    log_info "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
    docker system prune -f
    docker image prune -f
fi

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
log_info "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
docker compose build --no-cache

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞
log_info "üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ..."
df -h | grep -E '(Filesystem|/$)'

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –Ω–∞ —Ö–æ—Å—Ç–µ
log_info "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è volumes..."
sudo mkdir -p /var/lib/docker/volumes/callchecker_postgres_data
sudo mkdir -p /var/lib/docker/volumes/callchecker_redis_data
sudo mkdir -p /var/lib/docker/volumes/callchecker_app_logs
sudo mkdir -p /var/lib/docker/volumes/callchecker_audio_storage

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ production —Ä–µ–∂–∏–º–µ
log_info "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
log_info "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ PostgreSQL..."
timeout=60
while [ $timeout -gt 0 ]; do
    if docker compose exec postgres pg_isready -U callchecker -d callchecker_db &> /dev/null; then
        log_success "PostgreSQL –∑–∞–ø—É—â–µ–Ω–∞!"
        break
    fi
    echo -n "."
    sleep 2
    ((timeout-=2))
done

if [ $timeout -le 0 ]; then
    log_error "PostgreSQL –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥!"
    docker compose logs postgres
    exit 1
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Redis
log_info "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Redis..."
timeout=30
while [ $timeout -gt 0 ]; do
    if docker compose exec redis redis-cli ping &> /dev/null; then
        log_success "Redis –∑–∞–ø—É—â–µ–Ω!"
        break
    fi
    echo -n "."
    sleep 2
    ((timeout-=2))
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
log_info "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10
docker compose ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
log_info "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏..."
if docker compose logs --tail=50 | grep -i error; then
    log_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã—à–µ."
else
    log_success "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
fi

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏
log_success "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo
log_info "üìä –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "  –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç—É—Å:     docker compose ps"
echo "  –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏:       docker compose logs -f [service_name]"
echo "  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:            docker compose down"
echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å:         docker compose restart [service_name]"
echo "  –û–±–Ω–æ–≤–∏—Ç—å:              git pull && docker compose build && docker compose up -d"
echo
log_info "üìã –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
echo "  –í—Å–µ –ª–æ–≥–∏:              docker compose logs -f"
echo "  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:           docker compose logs -f postgres"
echo "  –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å:       docker compose logs -f bitrix-main"
echo "  –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ:         docker compose logs -f dialogue-recognition"
echo "  –ê–Ω–∞–ª–∏–∑:                docker compose logs -f dialog-analysis"
echo "  Google Sheets:         docker compose logs -f google-sheets-sync"
echo
log_info "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞:"
echo "  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Ä—Ç–∞–ª–æ–≤:    docker compose exec bitrix-main python bitrix24/setup_portals.py"
echo "  –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤: docker compose exec bitrix-main python bitrix24/sync_categories_criteria.py"
echo
log_warning "‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ:"
echo "  1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å webhook URL –≤ Bitrix24"
echo "  2. –î–æ–±–∞–≤–∏—Ç—å Google Sheets credentials –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é"
echo "  3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ñ–∞–π—Ä–≤–æ–ª–ª –¥–ª—è –ø–æ—Ä—Ç–æ–≤ 5432, 6379 (—Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞)"
echo "  4. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –±—ç–∫–∞–ø—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"

log_success "‚úÖ Callchecker —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
